/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
    id("com.github.johnrengelman.shadow") version ("8.1.1")
    id("io.freefair.lombok") version "8.6"

}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }

    maven {
        url = uri("https://hub.spigotmc.org/nexus/content/repositories/snapshots/")
    }

    maven {
        url = uri("https://oss.sonatype.org/content/groups/public/")
    }

    maven {
        url = uri("https://jitpack.io")
    }

    maven {
        url = uri("https://repo.extendedclip.com/content/repositories/placeholderapi/")
    }

    maven {
        url = uri("https://jitpack.io/")
    }

    maven {
        url = uri("https://repo.codemc.org/repository/maven-public/")
    }

    maven {
        url = uri("https://maven.citizensnpcs.co/repo")
    }

    maven {
        url = uri("https://repo.inventivetalent.org/repository/public/")
    }

    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    api(libs.org.jetbrains.annotations)
    api(libs.org.javacord.javacord)
    api(libs.commons.codec.commons.codec)
    api(libs.io.projectreactor.reactor.core)
    api(libs.org.mineskin.java.client)

    implementation(libs.io.github.rapha149.signgui.signgui)
    implementation(libs.com.github.cryptomorin.xseries)
    implementation(fileTree(mapOf("dir" to "dependencies", "include" to listOf("*.jar"))))

    compileOnly(libs.org.apache.httpcomponents.httpclient)
    compileOnly(libs.io.papermc.paper.paper.api)
    compileOnly(libs.org.spigotmc.spigot)
    compileOnly(libs.me.clip.placeholderapi)
    compileOnly(libs.com.github.milkbowl.vaultapi)
    compileOnly(libs.de.tr7zw.item.nbt.api.plugin)
}

group = "me.lagggpixel"
version = "1.0.67"
description = "Core"
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}

tasks {
    shadowJar {
        relocate("com.cryptomorin.xseries", " me.lagggpixel.core.libs.xseries")
        relocate("de.rapha149.signgui", " me.lagggpixel.core.libs.signgui")
    }
}