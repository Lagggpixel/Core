/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id "io.freefair.lombok" version "8.4"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri('https://repo.papermc.io/repository/maven-public/')
    }

    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://oss.sonatype.org/content/groups/public/')
    }

    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://repo.extendedclip.com/content/repositories/placeholderapi/')
    }

    maven {
        url = uri('https://jitpack.io/')
    }

    maven {
        url = uri('https://repo.codemc.org/repository/maven-public/')
    }

    maven {
        url = uri('https://maven.citizensnpcs.co/repo')
    }

    maven {
        url = uri('https://repo.inventivetalent.org/repository/public/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api libs.org.jetbrains.annotations
    api libs.com.google.code.gson.gson
    api libs.org.javacord.javacord
    api libs.commons.codec.commons.codec
    api libs.org.apache.logging.log4j.log4j.core
    api libs.io.projectreactor.reactor.core
    api libs.io.github.rapha149.signgui.signgui
    api libs.com.github.cryptomorin.xseries
    api libs.org.mineskin.java.client
    compileOnly libs.io.papermc.paper.paper.api
    compileOnly libs.org.spigotmc.spigot
    compileOnly libs.me.clip.placeholderapi
    compileOnly libs.com.github.milkbowl.vaultapi
    compileOnly libs.de.tr7zw.item.nbt.api.plugin
    compileOnly files("dependencies/Citizens-2.0.30-b2765.jar")
}

group = 'me.lagggpixel'
version = '1.0.44'
description = 'Core'
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
